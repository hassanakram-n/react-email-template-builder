{"id":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","dependencies":[{"name":"/Users/apple/Desktop/Dev/Open Source/email builder/package.json","includedInParent":true,"mtime":1698570061908},{"name":"/Users/apple/Desktop/Dev/Open Source/email builder/node_modules/react-app-polyfill/node_modules/core-js/package.json","includedInParent":true,"mtime":1698559841988},{"name":"../internals/export","loc":{"line":2,"column":16},"parent":"/Users/apple/Desktop/Dev/Open Source/email builder/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","resolved":"/Users/apple/Desktop/Dev/Open Source/email builder/node_modules/react-app-polyfill/node_modules/core-js/internals/export.js"},{"name":"../internals/symbol-is-well-known","loc":{"line":3,"column":32},"parent":"/Users/apple/Desktop/Dev/Open Source/email builder/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","resolved":"/Users/apple/Desktop/Dev/Open Source/email builder/node_modules/react-app-polyfill/node_modules/core-js/internals/symbol-is-well-known.js"}],"generated":{"js":"'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, forced: true }, {\n  isWellKnownSymbol: isWellKnownSymbol\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.symbol.is-well-known-symbol.js":"'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, forced: true }, {\n  isWellKnownSymbol: isWellKnownSymbol\n});\n"},"lineCount":11}},"error":null,"hash":"efbcc332b3388a2f135e8acb965f5873","cacheData":{"env":{}}}